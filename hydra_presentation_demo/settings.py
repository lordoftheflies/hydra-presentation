"""
Django settings for hydra_presentation project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from configurations import Configuration

class BaseConfiguration(Configuration):
    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'u%#+w9_ok&0zmqa23^jyli9-g3=rkb*5)jay=$$!6habkcac6^'

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = ['*']

    SITE_ID = 1

    # Application definition

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.sites',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',

        'corsheaders',

        'allauth',
        'allauth.account',
        'allauth.socialaccount',

        # 'allauth.socialaccount.providers.facebook',
        # 'allauth.socialaccount.providers.bitbucket',
        # 'allauth.socialaccount.providers.github',
        # 'allauth.socialaccount.providers.gitlab',
        # 'allauth.socialaccount.providers.google',
        # 'allauth.socialaccount.providers.slack',

        # 'rest_auth',
        # 'rest_auth.registration',

        'rest_framework',
        'rest_framework_swagger',

        # 'rest_framework.authtoken',

        'djangobower',

        'hydra_presentation.apps.HydraPresentationConfig',
        'hydra_presentation_app.apps.HydraPresentationAppConfig',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'hydra_presentation_demo.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
                'libraries': {
                    'polymer': 'hydra_presentation.templatetags.polymer'
                }
            },
        },
    ]

    PRESENTATION = {
        'ROOT_APP': 'hydra_presentation_app'
    }

    WSGI_APPLICATION = 'hydra_presentation_demo.wsgi.application'

    # Database
    # https://docs.djangoproject.com/en/2.0/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

    # Password validation
    # https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/2.0/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/2.0/howto/static-files/

    STATIC_URL = '/static/'
    # STATIC_ROOT = 'staticfiles'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    # STATICFILES_DIRS = (
    #     os.path.join(BASE_DIR, 'static'),
    # )

    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

    # Add it on your settings.py file
    # STATICFILES_DIRS = [
    #     os.path.join(BASE_DIR, "static"),  # your static/ files folder
    # ]
    STATICFILES_FINDERS = (
        'django.contrib.staticfiles.finders.FileSystemFinder',
        'django.contrib.staticfiles.finders.AppDirectoriesFinder',
        'djangobower.finders.BowerFinder',
        #    'django.contrib.staticfiles.finders.DefaultStorageFinder',
    )

    LOGGING = {
        'version': 1,
        'disable_existing_loggers': True,
        'formatters': {
            'verbose': {
                'format': '%(levelname)s %(asctime)s [%(processName)s:%(threadName)s] %(module)s(%(lineno)d) %(message)s'
            },
            'simple': {
                'format': '%(levelname)s %(message)s'
            },
        },
        'handlers': {
            'file': {
                'level': 'DEBUG',
                'class': 'logging.FileHandler',
                'filename': 'console.log',
                'formatter': 'verbose'
            },
            'console': {
                'class': 'logging.StreamHandler',
                'formatter': 'verbose'
            },
        },
        'loggers': {
            'django': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
            'hydra_presentation.apps': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
            'hydra_presentation.polymer': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
            'hydra_presentation.templatetags.polymer': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
            'hydra_presentation.models': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
            'hydra_presentation.serializers': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
            'hydra_presentation.views': {
                'handlers': ['console'],
                'level': 'DEBUG'
            },
        },
    }

    AUTHENTICATION_BACKENDS = (
        # Needed to login by username in Django admin, regardless of `allauth`
        'django.contrib.auth.backends.ModelBackend',

        # `allauth` specific authentication methods, such as login by e-mail
        'allauth.account.auth_backends.AuthenticationBackend',
    )

class PolymerConfiguration(object):
    BOWER_COMPONENTS_ROOT = os.path.join(BaseConfiguration.BASE_DIR, 'components')

    BOWER_INSTALLED_APPS = [
        "PolymerElements/app-layout#^2.0.0",
        "PolymerElements/app-route#^2.0.0",
        "SieBrum/brum-global-variable#^1.0.6",
        "PolymerElements/iron-ajax#^2.1.3",
        "PolymerElements/iron-flex-layout#^2.0.0",
        "PolymerElements/iron-collapse#^2.0.0",
        "PolymerElements/iron-form#^2.3.0",
        "PolymerElements/iron-iconset-svg#^2.0.0",
        "PolymerElements/iron-icon",
        "PolymerElements/iron-image#^2.2.0",
        "PolymerElements/iron-input#^2.1.1",
        "PolymerElements/iron-list#^2.0.14",
        "PolymerElements/iron-localstorage#^2.1.1",
        "PolymerElements/iron-media-query#^2.0.0",
        "PolymerElements/iron-pages#^2.0.0",
        "PolymerElements/iron-scroll-target-behavior#^2.1.1",
        "PolymerElements/iron-selector#^2.0.0",
        "PolymerElements/paper-button",
        "PolymerElements/paper-badge#^2.1.0",
        "PolymerElements/paper-card#^2.1.0",
        "PolymerElements/paper-checkbox#^2.0.2",
        "PolymerElements/paper-dialog#^2.1.1",
        "PolymerElements/paper-dropdown-menu#^2.0.3",
        "PolymerElements/paper-fab#^2.1.0",
        "PolymerElements/paper-icon-button#^2.0.0",
        "PolymerElements/paper-input#^2.2.0",
        "PolymerElements/paper-item#^2.1.1",
        "PolymerElements/paper-listbox#^2.1.1",
        "PolymerElements/paper-menu-button#^2.1.1",
        "PolymerElements/paper-progress#^2.1.0",
        "PolymerElements/paper-radio-button#^2.0.0",
        "PolymerElements/paper-radio-group#^2.1.0",
        "PolymerElements/paper-spinner#^2.1.0",
        "PolymerElements/paper-tabs#^2.0.0",
        "PolymerElements/paper-toast#^2.1.0",
        "Polymer/polymer#^2.0.0",
        "SieBrum/brum-global-variable#^1.0.6",
        "webcomponents/webcomponentsjs#^1.0.0",
        "web-animations-js#^2.3.1",
        "socket.io-client#^2.0.1",
        "chartjs#2.7.1",
        "chartjs-plugin-datalabels#0.2.0",
        "git://github.com/lordoftheflies/moment-js#^0.7.2",
        "git://github.com/lordoftheflies/plutonium-socket#master",
        "git://github.com/lordoftheflies/paper-time-picker#master",
    ]

    POLYMER_APPLICATION_ROOT = ''

class ProjectConfiguration(PolymerConfiguration, BaseConfiguration):
    pass

class DevelopmentConfiguration(ProjectConfiguration):
    DEBUG = True
    TEMPLATE_DEBUG = DEBUG


class StagingConfiguration(ProjectConfiguration):
    DEBUG = True
    TEMPLATE_DEBUG = DEBUG


class ProductionConfiguration(ProjectConfiguration):
    TIME_ZONE = 'America/New_York'
